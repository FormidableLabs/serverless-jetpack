service: serverless-jetpack-individually

package:
  individually: ${file(./serverless.js):pkg.individually}
  excludeDevDependencies: ${file(./serverless.js):pkg.excludeDevDependencies}

custom:
  region: ${opt:region, env:AWS_REGION}
  stage: ${opt:stage, env:STAGE}
  serverless-jetpack: ${file(./serverless.js):jetpack}

plugins:
  localPath: ../../../plugins
  modules:
    - serverless-offline
    - wrapper

provider:
  name: aws
  runtime: nodejs8.10
  region: ${self:custom.region}
  stage: ${self:custom.stage}
  environment:
    STAGE: ${self:custom.stage}
  timeout: 30 # seconds (`300` max)
  memorySize: 128 # MB value (`1024` default)

functions:
  base:
    handler: src/server/base.handler
    events: # Use a generic proxy to allow Express app to route.
      - http: ANY /base
      - http: 'ANY /base/{proxy+}'
  another:
    handler: src/server/another.handler
    events:
      - http: ANY /another
      - http: 'ANY /another/{proxy+}'
    package:
      # Package zip should **not** have `src/base.js`.
      exclude:
        - "**/node_modules/aws-sdk/**" # included on Lambda.
        - "src/**"
      include:
        - "src/another.js" # this should bring it back.
        - "!**/node_modules/.yarn-integrity"
        - "!**/node_modules/.cache/**"
        - "package.json"
