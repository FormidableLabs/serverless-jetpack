service: serverless-jetpack-monorepo

custom:
  region: ${opt:region, env:AWS_REGION}
  stage: ${opt:stage, env:STAGE}
  jetpack: ${file(./serverless.js):jetpack.service}

package:
  individually: true
  include:
    # General
    - "!**/.DS_Store"
    - "!**/yarn.lock"
    - "!**/package-lock.json"
    # Dependencies
    - "!**/node_modules/{@*/*,*}/CHANGELOG.md"
    - "!**/node_modules/{@*/*,*}/HISTORY.md"
    - "!**/node_modules/{@*/*,*}/LICENSE"
    - "!**/node_modules/{@*/*,*}/README.md"

plugins:
  modules:
    - serverless-offline
    - ../../../plugins/wrapper

provider:
  name: aws
  runtime: nodejs8.10
  region: ${self:custom.region}
  stage: ${self:custom.stage}
  environment:
    STAGE: ${self:custom.stage}
  timeout: 30 # seconds (`300` max)
  memorySize: 128 # MB value (`1024` default)

functions:
  base:
    handler: functions/base/src/base.handler
    events: # Use a generic proxy to allow Express app to route.
      - http: ANY /base
      - http: 'ANY /base/{proxy+}'
    jetpack:
      roots:
        - functions/base
    package:
      include:
        - "functions/base/src/**"
        - "!functions/**/exclude-me.js"

  another:
    handler: functions/another/src/base.handler
    events: # Use a generic proxy to allow Express app to route.
      - http: ANY /another
      - http: 'ANY /another/{proxy+}'
    jetpack:
      roots:
        - functions/another
    package:
      include:
        - "functions/another/src/**"
        - "!functions/**/exclude-me.js"
